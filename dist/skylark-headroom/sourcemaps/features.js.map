{"version":3,"sources":["features.js"],"names":["define","isBrowser","window","passiveEventsSupported","supported","options","passive","addEventListener","removeEventListener","err","isSupported","bind","document","documentElement","Object","assign","keys","requestAnimationFrame"],"mappings":";;;;;;;AAAAA,UAAU,WACR,SAASC,IACP,MAAyB,oBAAXC,OAqChB,OACED,UAAAA,EACAE,uBAhCF,WACE,IAAIC,GAAY,EAEhB,IACE,IAAIC,GAEFC,cACEF,GAAY,IAGhBF,OAAOK,iBAAiB,OAAQF,EAASA,GACzCH,OAAOM,oBAAoB,OAAQH,EAASA,GAC5C,MAAOI,GACPL,GAAY,EAGd,OAAOA,GAiBPM,YAdF,WACE,SACET,KACA,aAAcU,MACd,cAAeC,SAASC,iBACxBC,OAAOC,QACPD,OAAOE,MACPC","file":"../features.js","sourcesContent":["define([],function(){\n  function isBrowser() {\n    return typeof window !== \"undefined\";\n  }\n\n  /**\n   * Used to detect browser support for adding an event listener with options\n   * Credit: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   */\n  function passiveEventsSupported() {\n    var supported = false;\n\n    try {\n      var options = {\n        // eslint-disable-next-line getter-return\n        get passive() {\n          supported = true;\n        }\n      };\n      window.addEventListener(\"test\", options, options);\n      window.removeEventListener(\"test\", options, options);\n    } catch (err) {\n      supported = false;\n    }\n\n    return supported;\n  }\n\n  function isSupported() {\n    return !!(\n      isBrowser() &&\n      function() {}.bind &&\n      \"classList\" in document.documentElement &&\n      Object.assign &&\n      Object.keys &&\n      requestAnimationFrame\n    );\n  }\n\n  return {\n    isBrowser,\n    passiveEventsSupported,\n    isSupported\n  }\n\n});\n\n"]}